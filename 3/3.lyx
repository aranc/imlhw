#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\date{}
\usepackage{tikz}
\usepackage{xcolor}
\hypersetup{
    colorlinks,
    linkcolor={black!50!black},
    citecolor={blue!50!black},
    urlcolor={blue!80!black}
}
\usepackage{culmus}
\def\L{\protect\pL}
\usepackage{minted}
\usepackage{bbold}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref section
\pdf_pdfusetitle false
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
HW3
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccc}
\text{Aran Carmon} & \text{<aran.carmon@gmail.com>} & \text{038847588}\\
\text{Inbal Joffe} & \text{<	inbaljoffe@mail.tau.ac.il>} & \text{302868898}
\end{array}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Part*
Theory Questions
\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\lag}{\mathcal{L}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\hag}{\mathcal{H}}
\end_inset


\end_layout

\begin_layout Standard
1.
 Let's look at the inputs set 
\begin_inset Formula $S=x_{1},...,x_{d}\in R^{d}$
\end_inset

 such that 
\begin_inset Formula $\left(x_{i}\right)_{j}=\delta_{ij}$
\end_inset

 (that is, 
\begin_inset Formula $1$
\end_inset

 if 
\begin_inset Formula $i=j$
\end_inset

, and 
\begin_inset Formula $0$
\end_inset

 otherwise).
\end_layout

\begin_layout Standard
The size of the set is 
\begin_inset Formula $d$
\end_inset

.
 And for every subset 
\begin_inset Formula $A$
\end_inset

 of 
\begin_inset Formula $S$
\end_inset

, we can build a network that will give 
\begin_inset Formula $1$
\end_inset

 only on inputs in 
\begin_inset Formula $A$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
All layers except the first will simply pass through the previous layer:
 
\begin_inset Formula $W_{ij}^{(t+1)}=\delta_{ij}$
\end_inset

, 
\begin_inset Formula $b_{i}^{(t+1)}=\frac{1}{2}$
\end_inset

.
\end_layout

\begin_layout Standard
The first layer will only accept inputs from 
\begin_inset Formula $A$
\end_inset

: 
\begin_inset Formula $W_{ij}^{(1)}=\begin{cases}
1 & x_{i}\in A\\
0 & \text{otherwise}
\end{cases}$
\end_inset

, 
\begin_inset Formula $b_{i}^{(1)}=\frac{1}{2}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Notice that we can get a better lower bound by looking at the network that
 connects all the inputs to the first neuron, and that only passes the output
 of the first neuron all the way to the final output.
 This network is essentially only the first neuron, and we know that it's
 VCdim equals 
\begin_inset Formula $d+1$
\end_inset

.
 We will use this result in the next question.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
2.
 a.
 The hypothesis class is of the form: 
\begin_inset Formula $B=\left\{ \left.h_{1}\times...\times h_{d}\right|h_{1},...,h_{d}\in\mathcal{H}\right\} $
\end_inset

 
\end_layout

\begin_layout Standard
We have seen in the recitation that for 
\begin_inset Formula $m\ge\text{VCdim(\mathcal{H})}=d+1$
\end_inset

, 
\begin_inset Formula 
\[
\pi_{\hag}(m)\le\left(\frac{em}{d+1}\right)^{d+1}
\]

\end_inset


\end_layout

\begin_layout Standard
Also, we saw in class that 
\begin_inset Formula $\pi_{F_{1}\times F_{2}}(m)\le\pi_{F_{1}}(m)\cdot\pi_{F_{2}}(m)$
\end_inset

 (and inductively we can deduce for all 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

: 
\begin_inset Formula $\pi_{F_{1}\times...\times F_{n}}(m)\le\pi_{F_{1}}(m)\cdot...\cdot\pi_{F_{n}}(m))$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
Therefore, 
\begin_inset Formula $\pi_{B}(m)\le\left(\frac{em}{d+1}\right)^{d\left(d+1\right)}$
\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
b.
 The hypothesis class 
\begin_inset Formula $C$
\end_inset

 is of the form 
\begin_inset Formula $\left\{ \left.b_{1}\circ...\circ b_{l}\right|b_{1},...,b_{l}\in B\right\} $
\end_inset

 where 
\begin_inset Formula $B$
\end_inset

 is as defined above.
 
\end_layout

\begin_layout Standard
We saw in class that 
\begin_inset Formula $\pi_{F_{1}\circ F_{2}}(m)\le\pi_{F_{1}}(m)\cdot\pi_{F_{2}}(m)$
\end_inset

 (and inductively we can deduce for all 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

: 
\begin_inset Formula $\pi_{F_{1}\circ...\circ F_{n}}(m)\le\pi_{F_{1}}(m)\cdot...\cdot\pi_{F_{n}}(m))$
\end_inset

.
\end_layout

\begin_layout Standard
Therefore, 
\begin_inset Formula $\pi_{C}(m)\le\left(\frac{em}{d+1}\right)^{ld\left(d+1\right)}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
c.
 Each neuron has 
\begin_inset Formula $2d$
\end_inset

 parameters (
\begin_inset Formula $w_{i,:}^{(t)}$
\end_inset

 and 
\begin_inset Formula $\left(b_{t+1}\right)_{i}$
\end_inset

).
 For each of the first 
\begin_inset Formula $L-1$
\end_inset

 layers, we have 
\begin_inset Formula $d$
\end_inset

 neurons per layer, and an additional single neuron in the last layer; all
 in all, 
\begin_inset Formula $N=2d^{2}(L-1)+2d$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
d.
 TODO
\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
e.
 For every 
\begin_inset Formula $m\in\mathbb{N},$
\end_inset

 we have,
\begin_inset Formula 
\[
\pi_{C}(m)=\max_{\left|S\right|=m}\left|\Pi_{C}(S)\right|=\max_{\left|S\right|=m}\left|\left\{ \left.\left\langle h(s_{1}),...,h(s_{m})\right\rangle \right|h\in C\right\} \right|\le2^{m}
\]

\end_inset


\end_layout

\begin_layout Standard
The last inequality holds since 
\begin_inset Formula $\left\{ \left.\left\langle h(s_{1}),...,h(s_{m})\right\rangle \right|h\in C\right\} \subseteq\left\{ -1,1\right\} ^{m}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
We notice that always 
\begin_inset Formula $L\ge2$
\end_inset

 and 
\begin_inset Formula $d\ge1$
\end_inset

, so 
\begin_inset Formula $0\le d(d-1)(L-2)$
\end_inset

 and therefore 
\begin_inset Formula $Ld(d+1)\le2d^{2}(L-1)+2d=N$
\end_inset

; and from subquestion b we get: 
\begin_inset Formula 
\[
\pi_{C}(m)\le(\frac{em}{d+1})^{Ld(d+1)}\le(em)^{Ld(d+1)}\le(em)^{N}\text{\,\,\,\,\ensuremath{\text{(for \ensuremath{m\ge d+1\text{)}}}}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
Therefore, when 
\begin_inset Formula $m=\text{VCdim}(C)$
\end_inset

, we have 
\begin_inset Formula $2^{m}=\pi_{C}(m)\le(em)^{N}$
\end_inset

, and we can apply the previous subquestion to get:
\begin_inset Formula 
\[
\text{VCdim}(C)=m\le2N\log_{2}(eN)
\]

\end_inset


\end_layout

\begin_layout Standard
Notice that we can assign 
\begin_inset Formula $m=\text{VCdim}(C)$
\end_inset

, since VCdim
\begin_inset Formula $(C)\ge d+1$
\end_inset

 as we showed in the previous question.
\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
3.
 a.
 TODO
\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
b.
\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
4.
 a.
 When 
\begin_inset Formula $k=2$
\end_inset

, the multiclass SVM problem is:
\begin_inset Formula 
\[
f=\frac{1}{2}\left\Vert w_{1}\right\Vert ^{2}+\frac{1}{2}\left\Vert w_{2}\right\Vert ^{2}+\frac{C}{2}\sum_{i=1}^{m}\max(0,\left(w_{3-y_{i}}-w_{y_{i}}\right)x_{i}+1)
\]

\end_inset


\end_layout

\begin_layout Standard
Since we classify to either label 
\begin_inset Formula $1$
\end_inset

 or label 
\begin_inset Formula $2$
\end_inset

, it is reasonable to expect 
\begin_inset Formula $w_{1}^{*}=-w_{2}^{*}$
\end_inset

.
 (TODO: proving this would be nice).
\end_layout

\begin_layout Standard
In that case the above turns to,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
f & =\left\Vert w_{1}\right\Vert ^{2}+\frac{C}{2}\sum_{i=1}^{m}\max(0,1-2w_{y_{i}}x_{i})
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Define 
\begin_inset Formula $y'_{i}=\begin{cases}
1 & y_{i}=1\\
-1 & y_{i}=2
\end{cases}$
\end_inset

, and define 
\begin_inset Formula $w=w_{1}$
\end_inset

,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
f & =\left\Vert w\right\Vert ^{2}+\frac{C}{2}\sum_{i=1}^{m}\max(0,1-2y'_{i}wx_{i})
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
TODO: complete the equivalence
\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\one}{\mathbb{1}}
{1}
\end_inset


\end_layout

\begin_layout Standard
b.
 Derive with respect to 
\begin_inset Formula $w_{j}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{\partial f}{\partial w_{j}}=w_{j}+\frac{C}{m}\sum_{i=1}^{m}x_{i}\left(\one(j\ne y_{i})\one(w_{y_{i}}x_{i}-w_{j}x_{i}\le1)-\one(j=y_{i})\one(\exists p:\ w_{p}x_{i}-w_{j}x_{i}>-1)\right)
\]

\end_inset


\end_layout

\begin_layout Standard
So an SGD version, would be to sample a random point at each step, and to
 update all 
\begin_inset Formula $w_{j}$
\end_inset

s according to the following rule,
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $j\ne y_{i}$
\end_inset

 and 
\begin_inset Formula $j=\text{arg}\max_{p}\left(w_{p,t}x_{i}-w_{y_{i},t}x_{i}+\one(p\ne y_{i})\right)$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
w_{j,t+1}=(1-\eta)w_{j,t}-\eta Cx_{i}
\]

\end_inset


\end_layout

\begin_layout Standard
If 
\begin_inset Formula $j=y_{i}$
\end_inset

 and 
\begin_inset Formula $j\ne\text{arg}\max_{p}\left(w_{p,t}x_{i}-w_{y_{i},t}x_{i}+\one(p\ne y_{i})\right)$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
w_{j,t+1}=(1-\eta)w_{j,t}+\eta Cx_{i}
\]

\end_inset


\end_layout

\begin_layout Standard
In any other case:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
w_{j,t+1}=(1-\eta)w_{j,t}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\pluseq}{\mathrel{+}=}
{+=}
\end_inset


\end_layout

\begin_layout Standard
c.
 We notice that 
\begin_inset Formula $w_{j}$
\end_inset

 is a linear combination of 
\begin_inset Formula $x_{i}$
\end_inset

s.
 Instead of keeping 
\begin_inset Formula $w_{j}$
\end_inset

 explicitly, we can keep track of the coefficients of 
\begin_inset Formula $x_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
Define 
\begin_inset Formula $w_{j}=\sum_{i=1}^{m}M_{j,i}x_{i}$
\end_inset

.
 Classifying a new point 
\begin_inset Formula $x$
\end_inset

 would be 
\begin_inset Formula $y=\text{arg}\max_{j}(\sum_{i=1}^{m}M_{j,i}K(x_{i},x))$
\end_inset

.
 Where 
\begin_inset Formula $K$
\end_inset

 is the kernel function used.
\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
Pseudo-code for training:
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Input:
\end_layout

\begin_layout Itemize
kernel function 
\begin_inset Formula $K$
\end_inset


\end_layout

\begin_layout Itemize
list 
\begin_inset Formula $\left\langle x_{i},y_{i}\right\rangle $
\end_inset

 of 
\begin_inset Formula $m$
\end_inset

 training samples
\end_layout

\begin_layout Itemize
\begin_inset Formula $T$
\end_inset

 number of iterations
\end_layout

\begin_layout Itemize
\begin_inset Formula $\eta$
\end_inset

 step size
\end_layout

\begin_layout Itemize
\begin_inset Formula $C$
\end_inset

 penalty coefficient
\end_layout

\begin_layout Plain Layout
Output: A matrix 
\begin_inset Formula $M\in\text{Mat}(k,m)$
\end_inset

 to be used for classifying new points
\end_layout

\begin_layout Plain Layout
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Plain Layout
Initialize 
\begin_inset Formula $M\in\text{Mat}(k,m)$
\end_inset

 to be zeroes
\end_layout

\begin_layout Plain Layout
for 
\begin_inset Formula $T$
\end_inset

 iterations:
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

choose a random point 
\begin_inset Formula $i\in\left[m\right]:\,x_{i},y_{i}$
\end_inset

 from the training set
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

find 
\begin_inset Formula $j*=\text{arg}\max_{j}(\sum_{t=1}^{m}M_{j,t}K(x_{t},x_{i}))$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $M=(1-\eta)M$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

for each 
\begin_inset Formula $j\in\left[k\right]$
\end_inset

:
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

if 
\begin_inset Formula $j\ne y_{i}$
\end_inset

 and 
\begin_inset Formula $j=j*$
\end_inset

:
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $M_{j,i}=M_{j,i}-\eta C$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

if 
\begin_inset Formula $j=y_{i}$
\end_inset

 and 
\begin_inset Formula $j\ne j*$
\end_inset

:
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $M_{j,i}=M_{j,i}+\eta C$
\end_inset


\end_layout

\begin_layout Plain Layout
return 
\begin_inset Formula $M$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
5.
 If at each level 
\begin_inset Formula $i$
\end_inset

 of the tree, we will ask 
\begin_inset Formula $x_{i}=0$
\end_inset

, then after 
\begin_inset Formula $d$
\end_inset

 questions, any leaf will contain only one members.
 That is, one-to-one correspondence between leafs and vectors 
\begin_inset Formula $\{0,1\}^{d}$
\end_inset

.
\end_layout

\begin_layout Standard
To implement an arbitrary classifier using this tree, classify every leaf
 according to what the arbitrary classifier would do.
\end_layout

\begin_layout Standard
\begin_inset Formula $\phantom{A}$
\end_inset


\end_layout

\begin_layout Standard
Since we can classify any subset we wish as 
\begin_inset Formula $1$
\end_inset

, we have 
\begin_inset Formula $2^{d}$
\end_inset

 possible classes.
 That is also the maximum possible numbers of classes using 
\begin_inset Formula $2^{d}$
\end_inset

 inputs, therefore the VCdim is 
\begin_inset Formula $2^{d}.$
\end_inset


\end_layout

\begin_layout Standard
TODO: verify the last paragraph
\end_layout

\begin_layout Part*
\begin_inset Newpage pagebreak
\end_inset

HW3: Programming Assignment
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccc}
\text{Aran Carmon} & \text{<aran.carmon@gmail.com>} & \text{038847588}\\
\text{Inbal Joffe} & \text{<	inbaljoffe@mail.tau.ac.il>} & \text{302868898}
\end{array}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box ovalbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
All source code can be found in:
\end_layout

\begin_layout Plain Layout
\begin_inset Formula $\sim$
\end_inset

arancarmon/imlhw/3/submit
\end_layout

\end_inset


\end_layout

\end_body
\end_document
